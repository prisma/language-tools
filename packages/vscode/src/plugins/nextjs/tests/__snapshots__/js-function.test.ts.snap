// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`jsdoc tests -  named next import and const both export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  named next import and const both export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  named next import and const both export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  named next import and const both export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and const both export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and const both export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and const getServerSideProps export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  named next import and const getServerSideProps export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  named next import and const getServerSideProps export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  named next import and const getServerSideProps export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and const getServerSideProps export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and const getServerSideProps export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and const getStaticProps export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  named next import and const getStaticProps export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  named next import and const getStaticProps export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  named next import and const getStaticProps export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and const getStaticProps export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and const getStaticProps export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and function both export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  named next import and function both export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  named next import and function both export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  named next import and function both export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and function both export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and function both export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and function getServerSideProps export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  named next import and function getServerSideProps export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  named next import and function getServerSideProps export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  named next import and function getServerSideProps export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and function getServerSideProps export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and function getServerSideProps export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and function getStaticProps export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  named next import and function getStaticProps export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  named next import and function getStaticProps export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  named next import and function getStaticProps export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and function getStaticProps export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  named next import and function getStaticProps export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { NextLink } from 'next';
  import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and const both export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  no import and const both export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  no import and const both export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  no import and const both export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and const both export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and const both export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and const getServerSideProps export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  no import and const getServerSideProps export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  no import and const getServerSideProps export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  no import and const getServerSideProps export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and const getServerSideProps export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and const getServerSideProps export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and const getStaticProps export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  no import and const getStaticProps export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  no import and const getStaticProps export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  no import and const getStaticProps export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and const getStaticProps export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and const getStaticProps export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and function both export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  no import and function both export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  no import and function both export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  no import and function both export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and function both export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and function both export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and function getServerSideProps export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  no import and function getServerSideProps export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  no import and function getServerSideProps export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  no import and function getServerSideProps export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and function getServerSideProps export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and function getServerSideProps export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and function getStaticProps export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  no import and function getStaticProps export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  no import and function getStaticProps export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  no import and function getStaticProps export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and function getStaticProps export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  no import and function getStaticProps export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and const both export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  server type import and const both export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  server type import and const both export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  server type import and const both export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and const both export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and const both export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and const getServerSideProps export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  server type import and const getServerSideProps export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  server type import and const getServerSideProps export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  server type import and const getServerSideProps export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and const getServerSideProps export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and const getServerSideProps export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and const getStaticProps export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  server type import and const getStaticProps export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  server type import and const getStaticProps export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  server type import and const getStaticProps export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and const getStaticProps export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and const getStaticProps export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and function both export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  server type import and function both export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  server type import and function both export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  server type import and function both export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and function both export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and function both export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and function getServerSideProps export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  server type import and function getServerSideProps export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  server type import and function getServerSideProps export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  server type import and function getServerSideProps export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and function getServerSideProps export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and function getServerSideProps export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and function getStaticProps export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  server type import and function getStaticProps export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  server type import and function getStaticProps export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  server type import and function getStaticProps export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and function getStaticProps export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  server type import and function getStaticProps export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
  import { InferGetServerSidePropsType } from "next";
  import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and const both export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  static type import and const both export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  static type import and const both export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  static type import and const both export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and const both export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and const both export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 
export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and const getServerSideProps export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  static type import and const getServerSideProps export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  static type import and const getServerSideProps export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  static type import and const getServerSideProps export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and const getServerSideProps export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and const getServerSideProps export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getServerSideProps = async (ctx) => {}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and const getStaticProps export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  static type import and const getStaticProps export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  static type import and const getStaticProps export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  static type import and const getStaticProps export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and const getStaticProps export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and const getStaticProps export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export const getStaticProps = async (ctx) => {}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and function both export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  static type import and function both export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  static type import and function both export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  static type import and function both export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and function both export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and function both export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 
export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and function getServerSideProps export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  static type import and function getServerSideProps export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  static type import and function getServerSideProps export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  static type import and function getServerSideProps export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and function getServerSideProps export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and function getServerSideProps export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getServerSideProps(ctx){}; 

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and function getStaticProps export and function anon with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function({ Component, pageProps }){return ()}
`;

exports[`jsdoc tests -  static type import and function getStaticProps export and function anon with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  static type import and function getStaticProps export and function anon without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
export default function(props){return ()}
`;

exports[`jsdoc tests -  static type import and function getStaticProps export and function named with destructed props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp({ Component, pageProps }) {return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and function getStaticProps export and function named with props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;

exports[`jsdoc tests -  static type import and function getStaticProps export and function named without props.jsx 1`] = `
import { Box, Button, Heading, Text } from '@chakra-ui/core';
import { InferGetStaticPropsType } from "next";
import { PrismaClient } from '@prisma/client';

export async function getStaticProps(ctx){}; 

/** @param {import('next').InferGetStaticPropsType<typeof getStaticProps> } props */
function MyApp(props){return ()}
export default MyApp;
`;
