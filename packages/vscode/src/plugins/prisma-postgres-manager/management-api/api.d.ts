/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/projects': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Retrieve all projects */
    get: operations['getProjects']
    put?: never
    /** @description Create a new project */
    post: operations['postProjects']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/projects/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Retrieve a project */
    get: operations['getProjectsById']
    put?: never
    post?: never
    /** @description Deletes a project */
    delete: operations['deleteProjectsById']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/projects/{id}/transfer': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** @description Transfer a project to a new owner's workspace */
    post: operations['postProjectsByIdTransfer']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/projects/{id}/databases': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Retrieve all databases for a project */
    get: operations['getProjectsByIdDatabases']
    put?: never
    /** @description Create a new database for a project */
    post: operations['postProjectsByIdDatabases']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/projects/{projectId}/databases/{databaseId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Retrieve a database */
    get: operations['getProjectsByProjectIdDatabasesByDatabaseId']
    put?: never
    post?: never
    /** @description Delete a database */
    delete: operations['deleteProjectsByProjectIdDatabasesByDatabaseId']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/projects/{projectId}/databases/{databaseId}/connections': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description Retrieve all database connections */
    get: operations['getProjectsByProjectIdDatabasesByDatabaseIdConnections']
    put?: never
    /** @description Creates a new database connection string. */
    post: operations['postProjectsByProjectIdDatabasesByDatabaseIdConnections']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/projects/{projectId}/databases/{databaseId}/connections/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /** @description Deletes a database connection string. */
    delete: operations['deleteProjectsByProjectIdDatabasesByDatabaseIdConnectionsById']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: never
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  getProjects: {
    parameters: {
      query?: {
        cursor?: string | null
        limit?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Retrieve all projects */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data: {
              /** Format: date-time */
              createdAt: string
              id: string
              name: string
              databases: {
                id: string
                name: string
              }[]
            }[]
            pagination: {
              /** @description Next cursor to continue pagination */
              nextCursor: string | null
              /** @description Whether there are more items to paginate */
              hasMore: boolean
            }
          }
        }
      }
      /** @description Unauthorized */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @constant */
            error: 'unauthorized'
            errorDescription: string
          }
        }
      }
    }
  }
  postProjects: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @default us-east-1
           * @enum {string}
           */
          region?: 'us-east-1' | 'eu-west-3' | 'ap-northeast-1'
          name?: string
        }
      }
    }
    responses: {
      /** @description Project created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** Format: date-time */
            createdAt: string
            id: string
            name: string
            databases: {
              id: string
              name: string
            }[]
          }
        }
      }
      /** @description Unauthorized */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @constant */
            error: 'unauthorized'
            errorDescription: string
          }
        }
      }
    }
  }
  getProjectsById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Project retrieved */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** Format: date-time */
            createdAt: string
            id: string
            name: string
            databases: {
              id: string
              name: string
            }[]
          }
        }
      }
      /** @description Unauthorized */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @constant */
            error: 'unauthorized'
            errorDescription: string
          }
        }
      }
      /** @description Project with the specified ID was not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  deleteProjectsById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Project deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Project cannot be deleted due to existing dependencies */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            error: {
              code: string
              message: string
            }
          }
        }
      }
      /** @description Unauthorized */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @constant */
            error: 'unauthorized'
            errorDescription: string
          }
        }
      }
      /** @description Project with the specified ID was not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            error: {
              code: string
              message: string
            }
          }
        }
      }
    }
  }
  postProjectsByIdTransfer: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': {
          recipientAccessToken: string
        }
      }
    }
    responses: {
      /** @description Project transferred */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** Format: date-time */
            createdAt: string
            id: string
            name: string
            databases: {
              id: string
              name: string
            }[]
          }
        }
      }
      /** @description Unauthorized */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @constant */
            error: 'unauthorized'
            errorDescription: string
          }
        }
      }
      /** @description Project with the specified ID was not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getProjectsByIdDatabases: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Databases retrieved */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data: {
              /** Format: date-time */
              createdAt: string
              id: string
              name: string
              region: string | null
            }[]
            pagination: {
              /** @description Next cursor to continue pagination */
              nextCursor: string | null
              /** @description Whether there are more items to paginate */
              hasMore: boolean
            }
          }
        }
      }
      /** @description Unauthorized */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @constant */
            error: 'unauthorized'
            errorDescription: string
          }
        }
      }
      /** @description Project with the specified ID was not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  postProjectsByIdDatabases: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @default us-east-1
           * @enum {string}
           */
          region?: 'us-east-1' | 'eu-west-3' | 'ap-northeast-1'
          name?: string
        }
      }
    }
    responses: {
      /** @description Database created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** Format: date-time */
            createdAt: string
            id: string
            name: string
            region: string
            connectionString: string
            status: string
            apiKeys: {
              id: string
              name: string
              /** Format: date-time */
              createdAt: string
              connectionString: string
            }[]
          }
        }
      }
      /** @description Unauthorized */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @constant */
            error: 'unauthorized'
            errorDescription: string
          }
        }
      }
      /** @description Project does not belong to the workspace of the Service Token */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getProjectsByProjectIdDatabasesByDatabaseId: {
    parameters: {
      query?: never
      header?: never
      path: {
        projectId: string
        databaseId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Database retrieved */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** Format: date-time */
            createdAt: string
            id: string
            name: string
            region: string | null
          }
        }
      }
      /** @description Unauthorized */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @constant */
            error: 'unauthorized'
            errorDescription: string
          }
        }
      }
      /** @description Database with the specified ID was not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  deleteProjectsByProjectIdDatabasesByDatabaseId: {
    parameters: {
      query?: never
      header?: never
      path: {
        projectId: string
        databaseId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Database deleted successfully */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            message: string
          }
        }
      }
      /** @description Unauthorized */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @constant */
            error: 'unauthorized'
            errorDescription: string
          }
        }
      }
      /** @description Cannot delete the default environment */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Database with the specified ID was not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            error: {
              code: string
              message: string
            }
          }
        }
      }
    }
  }
  getProjectsByProjectIdDatabasesByDatabaseIdConnections: {
    parameters: {
      query?: {
        cursor?: string | null
        limit?: number
      }
      header?: never
      path: {
        projectId: string
        databaseId: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Retrieve all database connections */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            error: {
              code: string
              message: string
            }
          }
        }
      }
    }
  }
  postProjectsByProjectIdDatabasesByDatabaseIdConnections: {
    parameters: {
      query?: never
      header?: never
      path: {
        projectId: string
        databaseId: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': {
          name: string
        }
      }
    }
    responses: {
      /** @description Database connection string created */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            id: string
            name: string
            /** Format: date-time */
            createdAt: string
            connectionString: string
          }
        }
      }
      /** @description Unauthorized */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            error: {
              code: string
              message: string
            }
          }
        }
      }
      /** @description Database with the specified ID was not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            id: string
            name: string
            /** Format: date-time */
            createdAt: string
            connectionString: string
          }
        }
      }
    }
  }
  deleteProjectsByProjectIdDatabasesByDatabaseIdConnectionsById: {
    parameters: {
      query?: never
      header?: never
      path: {
        projectId: string
        databaseId: string
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Database connection string deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorized */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            error: {
              code: string
              message: string
            }
          }
        }
      }
      /** @description Database with the specified ID was not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            error: {
              code: string
              message: string
            }
          }
        }
      }
    }
  }
}
