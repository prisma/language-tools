name: Bump versions for extension only (on push to master and patch branch)

# This workflow covers both '1_check_for_updates' and '2_bump_versions' workflows, therefore it is another variant of the same, but specifically for extension only, without any Prisma CLI updates that would need to be handled.

on:
    push:
      branches: 
        - 'master'
        - '**.x'
      paths-ignore:
        - '.github/**'

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
  PRISMA_TELEMETRY_INFORMATION: "language-tools 1_2_b_bump_extension_only.yml"

jobs:
  bump:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install Dependencies
        run: npm install
      - name: Extract branch name # needed because github.ref will contain sth like refs/heads/2.6.x, so pushing to that will fail
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: checkout master if necessary
        if: endsWith(github.ref, '/master') == false
        run: git fetch && git checkout master
      - name: Setup Git
        run: |
          sh scripts/set_git_credentials.sh
      - name: Update extension version in scripts folder 
        id: update
        run: node scripts/bump_extension_version.js dev
      - name: Commit and Push
        run: |
          sh scripts/commit_and_push.sh "bump extension version in scripts to ${{ steps.update.outputs.next_extension_version }}."
      
      - name: Checkout previous branch
        if: endsWith(github.ref, '/master') == false
        run: git checkout ${{ steps.extract_branch.outputs.branch }}
      - name: Update VSCode extension version
        run:  | 
          node scripts/update_package_json_files.js dev ${{ steps.update.outputs.next_extension_version }} ""
      - name: Install Dependencies
        run: npm install
      - name: Commit and Push
        run: |
          sh scripts/commit_and_push.sh "bump extension version in package.json to ${{ steps.update.outputs.next_extension_version }}." ${{ steps.setup_branch.outputs.new_branch }}
      
      - name: Trigger next workflow for LSP Unit tests
        if: endsWith(github.ref, '/master')
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Unit tests for LSP and publish
          token: ${{ secrets.GH_TOKEN }}
          inputs: '{ "npm_channel": "dev", "extension_version": "${{ steps.update.outputs.next_extension_version }}", "branch": "master" }'
      - name: Trigger next workflow for LSP Unit tests
        if: endsWith(github.ref, '/master') == false
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Unit tests for LSP and publish
          token: ${{ secrets.GH_TOKEN }}
          inputs: '{ "npm_channel": "patch-dev", "extension_version": "${{ steps.update.outputs.next_extension_version }}", "branch": "${{steps.extract_branch.outputs.branch}}" }'
