name: Bump versions for extension only

on:
    push:
      branches: 
        - 'master'
        - '**.x'
    workflow_dispatch: # promote patch to stable
      branches:
        - '**.x'

env:
  ENVIRONMENT: ${{ secrets.ENVIRONMENT }}

jobs:
  bump:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Install Dependencies
        run: npm install
      - name: checkout master if necessary
        if: endsWith(github.ref, '/master') == false
        run: git checkout master
      - name: Setup Git
        run: |
          git config --global user.email "prismabots@gmail.com"
          git config --global user.name "Prismo"
      - name: Update extension version in scripts folder and push to master for dev
        if: ${{ github.event_name }} != workflow_dispatch
        id: update
        run: npm run bump_extension_version_in_scripts dev
      - name: Update extension version in scripts folder and push to master for stable patch
        if: ${{ github.event_name }} == workflow_dispatch
        id: update
        run: npm run bump_extension_version_in_scripts latest
      - name: Push to master
        run: |
          git add -A .
          git commit -m "bump extension version in scripts to ${{ steps.update.outputs.next_extension_version }}."
          git pull --rebase
          git push
      - name: Checkout previous branch
        if: ${{ github.event_name }} != workflow_dispatch
        run: git checkout {{ steps.extract_branch.outputs.branch }}
      - name: Get latest patch tag to promote it to stable
        if: ${{ github.event_name }} == workflow_dispatch
        id: patch_tag
        run: npm run get_current_patch_tag
      - name: Switch branch 
        id: setup_branch
        if: ${{ github.event_name }} == workflow_dispatch
        run: npm run setup:branch && git checkout ${{ steps.patch_tag.outputs.tag }}
      - name: Update VSCode extension version
        run:  npm run bump_versions_in_repo dev ${{ steps.update.outputs.next_extension_version }} ""
      - name: Push to branch
        run: |
          git add -A .
          git commit -m "bump extension version in package.json to ${{ steps.update.outputs.next_extension_version }}."
          git pull --rebase
          git push ${{ steps.setup_branch.outputs.new_branch}}
      - name: Trigger next workflow for LSP Unit tests
        if: ${{ github.event_name }} != workflow_dispatch
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Unit tests for LSP and bump LSP version
          token: ${{ secrets.GH_TOKEN }}
          inputs: '{ "npm_channel": "dev", "extension_version": "${{ steps.update.outputs.next_extension_version }}", "branch": "master" }'
      - name: Trigger next workflow for LSP Unit tests
        if: ${{ github.event_name }} == workflow_dispatch
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Unit tests for LSP and bump LSP version
          token: ${{ secrets.GH_TOKEN }}
          inputs: '{ "npm_channel": "latest", "extension_version": "${{ steps.update.outputs.next_extension_version }}", "branch": "${{steps.setup_branch.outputs.branch}}" }'
