name: E2E tests after release on VSIX
run-name: E2E tests after release on VSIX - ${{ inputs.extension_type }} ${{ inputs.extension_version }}

on:
  workflow_dispatch:
    inputs:
      extension_type:
        description: 'Insider or stable extension'
        required: true
      extension_version:
        description: 'VS Code extension version'
        required: true

env:
  ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
  # * Enables github logging
  # ACTIONS_STEP_DEBUG: true

jobs:
  test:
    name: Test published extension
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    outputs:
      installed-extension: ${{ steps.install.outputs.installed-extension }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PRISMA_BOT_TOKEN }}
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install Dependencies
        run: npm install && npm run bootstrap
      - name: Install extension via CLI
        id: install
        run: |
          node scripts/e2eTestsOnVsix/install_extension.js ${{ github.event.inputs.extension_type }} ${{ github.event.inputs.extension_version }}
      - name: Run test
        if: ${{ steps.install.outputs.installed-extension }}
        uses: coactions/setup-xvfb@v1
        with:
          run: npm run test:e2e ${{ github.event.inputs.extension_type }} ${{ matrix.os }} ${{ github.event.inputs.extension_version }}

  after-test:
    name: Bump tested version and commit # scripts/versions/tested_extension_stable & tested_extension_insider
    runs-on: ubuntu-latest
    needs: [test]
    if: always()
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PRISMA_BOT_TOKEN }}
      - name: echo new version
        run: echo ${{ needs.test.outputs.installed-extension }}
      - name: Bump version
        if: ${{needs.test.result == 'success' && needs.test.outputs.installed-extension }}
        run: npm run test:bump ${{ github.event.inputs.extension_type }} ${{ github.event.inputs.extension_version }}
        env:
          GH_TOKEN: ${{ secrets.PRISMA_BOT_TOKEN }} # Needed and used in the shell script behind test:bump
