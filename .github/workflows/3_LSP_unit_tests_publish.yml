name: Unit tests for LSP and publish

on:
  workflow_dispatch:
    inputs:
      npm_channel:
        description: 'Prisma CLI NPM Channel'
        required: true
      extension_version:
        description: 'VSCode extension version'
        required: true
      branch:
        description: 'Branch to run run this workflow on'
        required: true

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
  PRISMA_TELEMETRY_INFORMATION: "language-tools 3_LSP_unit_tests_publish.yml"

jobs:
  tests:
    name: Run unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps: 
      - uses: actions/checkout@v2
        with: 
          ref: ${{ github.event.inputs.branch }}
      - name: Install Dependencies in LSP
        run: cd packages/language-server && npm install
      - name: Compile LSP
        run: cd packages/language-server && npm run build
      - name: LSP unit tests
        run: cd packages/language-server && npm test

  bump:
    name: Bump LSP version
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
      - name: Install Dependencies in LSP
        run: cd packages/language-server && npm install
      - name: Compile LSP
        run: cd packages/language-server && npm run build
      - name: Publish LSP to npm
        # Setup .npmrc file to publish to npm
        uses: actions/setup-node@v1
        with: 
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - run: cd packages/language-server && npm publish --tag ${{ github.event.inputs.npm_channel }} --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN}}
      
      - name: Trigger next workflow for bumping LSP in extension
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Bump LSP in VSCode extension
          token: ${{ secrets.GH_TOKEN }}
          inputs: '{ "npm_channel": "${{ github.event.inputs.npm_channel }}", "extension_version": "${{ github.event.inputs.extension_version }}", "branch": "${{ github.event.inputs.branch }}" }'
