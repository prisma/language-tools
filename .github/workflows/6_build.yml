name: 6. Build extension # and upload as release to GitHub
run-name: 6. Build extension + upload - ${{ inputs.trigger_reason }}

on:
  workflow_dispatch:
    inputs:
      npm_channel:
        description: 'Prisma CLI NPM Channel'
        required: true
      extension_version:
        description: 'VS Code extension version'
        required: true
      branch:
        description: 'Branch to run run this workflow on'
        required: true
      trigger_reason:
        description: 'Information about what caused the publishing process in the first place.'
        required: true

env:
  ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
  PRISMA_TELEMETRY_INFORMATION: 'language-tools 6_build.yml'
  SLACK_USERNAME: Prismo
  SLACK_ICON_EMOJI: ':ship:'
  SLACK_MSG_AUTHOR: prisma-bot

jobs:
  build:
    name: Build extension
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: win32-x64
          - os: ubuntu-latest
            target: linux-x64
          - os: macOS-13
            target: darwin-x64
          - os: macos-latest
            target: darwin-arm64
    runs-on: ${{ matrix.os }}
    timeout-minutes: 7
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install Dependencies
        run: npm install && npm run bootstrap
      - name: Build all packages
        run: npm run compile
      - name: Replace Readme for marketplace
        run: node scripts/change_readme.js ${{ github.event.inputs.npm_channel }}
      - name: Build vsix
        run: cd packages/vscode && npm run package -- --target ${{ matrix.target }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: vsix-${{ matrix.target }}
          path: ./packages/vscode/*-${{ matrix.target }}.vsix

  release:
    name: Create release
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [build]
    outputs:
      tag_name: ${{ steps.names.outputs.tag_name }}
      asset_name: ${{ steps.names.outputs.asset_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      - name: Print inputs
        run: |
          echo ${{github.event.inputs.npm_channel}}
          echo ${{github.event.inputs.extension_version}}
          echo ${{github.event.inputs.branch}}
          echo ${{github.event.inputs.trigger_reason}}
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: vsix-${{ matrix.target }}
          path: ./vsix
          merge-multiple: true
      - name: Get git tag and asset name
        id: names
        run: node scripts/get_tag_name.js ${{ github.event.inputs.npm_channel }} ${{ github.event.inputs.extension_version }}
      - name: Create release
        # uses: softprops/action-gh-release@v2
        # with:
        #   name: ${{ steps.names.outputs.tag_name }}
        #   tag_name: ${{ steps.names.outputs.tag_name }}
        #   files: |
        #     ./vsix/*.vsix
        run: |
          gh release create ${{ steps.names.outputs.tag_name }} \
            ./vsix/*.vsix \
            --title ${{ steps.names.outputs.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Trigger next workflow to publish extension
      #   uses: benc-uk/workflow-dispatch@v1
      #   with:
      #     workflow: 7. Publish
      #     token: ${{ secrets.PRISMA_BOT_TOKEN }}
      #     inputs: '{ "asset_name": "${{ steps.get_asset_name.outputs.asset_name }}", "tag_name": "${{ steps.names.outputs.tag_name }}", "trigger_reason": "${{github.event.inputs.trigger_reason}}" }'

  # slack:
  #   name: Send slack notification
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 5
  #   needs: [release]
  #   if: always()
  #   env:
  #     SLACK_MESSAGE: '${{ needs.release.outputs.tag_name }} - ${{github.event.inputs.trigger_reason}} '
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         ref: ${{ github.event.inputs.branch }}

  #     - name: 'Set current job url in SLACK_FOOTER env var'
  #       if: ${{ always() }}
  #       run: echo "SLACK_FOOTER=<$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|Click here to go to the job logs>" >> $GITHUB_ENV

  #     - name: Slack Notification on Failure
  #       if: ${{ failure() || needs.release.result == 'failure' }}
  #       uses: rtCamp/action-slack-notify@v2.3.2
  #       env:
  #         SLACK_TITLE: '6. Release failed :x:'
  #         SLACK_COLOR: '#FF0000'
  #         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_FAILURES }}
  #         SLACK_CHANNEL: feed-language-tools-failures

  #     - name: Slack Notification on Success
  #       if: ${{ success() && needs.release.result == 'success' }}
  #       uses: rtCamp/action-slack-notify@v2.3.2
  #       env:
  #         SLACK_TITLE: '6. Release was successful :white_check_mark:'
  #         SLACK_COLOR: '#008000'
  #         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  #         SLACK_CHANNEL: feed-language-tools
